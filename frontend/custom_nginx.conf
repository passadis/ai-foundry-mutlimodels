server {
    listen 80;
    server_name _;

    root /usr/share/nginx/html;

    index index.html;

    location / {
        # Redirect all requests to index.html for React Router
        try_files $uri /index.html;
    }

    location /static/ {
        # Serve static files
        expires max;
        add_header Cache-Control "public";
    }

    # API endpoints via Dapr
    location /api/v1/ {
        proxy_pass http://localhost:3500/v1.0/invoke/backend/method/api/v1/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 'healthy\n';
    }
}

# server {
#     listen 80;
#     server_name _;

#     root /usr/share/nginx/html;

#     index index.html;

#     location / {
#         # Redirect all requests to index.html for React Router
#         try_files $uri /index.html;
#     }

#     location /static/ {
#         # Serve static files
#         expires max;
#         add_header Cache-Control "public";
#     }

#     location /api/v1/ {
#         proxy_pass http://localhost:3500/v1.0/invoke/backend/method/api/v1/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# }
